
import pytest
import pytest_asyncio
from rlp import decode, encode

# cannot parametrize and use random data at the same time
SAMPLE_DATA = [
    b"\r",
    b"\x8b\x81\x7f\x14|\x839\x9e\xc8",
    b'\xe1\'k\x98H\n\x17k\xaa\xa3\xda\xd9x\x1bn\x83\xe3Z\xc1\x19\x96\xd4\xff\x08\xe2Wb\xdd\xdd\x91+\xf6C\x92\xae\xf3\xd2\x84h\xb6\x8a0\xf9\x91|\xadJ\x95\\\x9d,\x14GC\xc4)\xbd\x84\x8c\xa6F,\xc0\xe6q\xb6\xa7\xb6\xb8\xf4\x99>\xb5\xcef\x94fftt\xb9\x89\x8f!R\x85\xd1\xbc\'\xd8\xd6p~^d\x99|\xa9\x9e\x934\\\xe3\xca\xea\xad\\\xcd\xd8zkq[\x81\xf1\xd3\x06;\xd7\x0b\x9d\xa0\xd9\x08\x9f*\xb6\x89\xfaZVD\xd6\xb4\x9bQ9\xe5\x9abz\xdf\xb7D\x954W/HyQ\xfa;Q{\xf4\x1b\xf0\x9cE\x87Y\xb2\x18]\xf5\x1cx\x86\xc0%8\r0\xfa=\x91\xa8\xf6\xbe\xacK\xaeec\xc7\xae\xdc\xe2=y\x93\x02\x9dca\xfe\xfb\x11\r\xd8\xce`\xc3j\xaaH`B\xef\xe4\x9b;A+e_LN\'\xdf5\x8e+\x8c{f\r\xc8\xaa\xc7m\xf5\x05\'\xbe+S;\xc1i\xb9A\x15\x06\xab\xfe\xff\xa5\xa5\xc3X\xc5a %a\tmQ\xd6NB\x1d\xec<{\x03\r?\x9d\xeb#\xf5\x13\x04\x04Q\xd9b\xacO\xb7\xc7\xa4LU+\xf8_\xcc\xcd\xb8\xa0I~n\xa8\x84\xa9\x9a\'\xa1\xd9<a\xab\xff\xc0\xc8\x92\x83\xech\xc2\x1a"d\xae\xe1\xa6\x92\xe0\x11b\x88\xcd\xba \x9bKUS\xdd\x03\xe8\x9c>\x83\xf8\xc5-\xc7\xd1\x15\xab\x1f\\\xb6\xc4\xa0;\x8d\xf96\xbaM*\xc1NY\x01\xde\xda6\x19v\xf2\xd4\x91\xf3CH\xee\xe9\x9c\xce\x15*\xbe\x96\x83x\xba\x05`?\xbaZ,_\x8bx\xda\xfc\xcb\x92\x19\xdd\xa9=\x8e\x81\x93\x9dlu\x84q\x06\x1e\xc4\xcc\xa0\xc7\xf9\xeb\x91\x0c\xbei\xa4J\xae\xfccqk\xf6\xf4\xeb\xb2)f8\x8e\xed\xb2\x81\xa5\xf5\x99\xa4\x0c\x81\xd0\x91\x8e\xe0\xb1\xb3\xaa\xa1\x98T\x85\x9e\xb4\x9d\x00\xadr\xaat\x9c,p\xfe\x14B\x89\xfc\xa9\x88$\xfaW\xdb\xca\xf2\xcb\x83\xbc\xf7\xb2\x12\x93\xa9r\xd0\xe7\xa1\xeaR\x02\xcc\xdc\x03\xee\xc4q\xda\xf2\x03\xd8\xacq"\xaaN\xbe\xfb\xb0\xd6{D\x99\xdf\x1aV\xbf\xd4\x19\x1c\x88\xf3\xd6\xb2\xec\xef.?c\xaaP\xf80\x03\x01\x91u\x83\xe5\xa7\x88W\xab\xee\x0eK,\xeal\xfa\x0f\t=\xfbw\xa8\xb8a\xfc",\x0e^\xdd:#\xd83a\xf4\xc3L\r\x02\t\n\xc5)\x88\xc1\x9a\n\x9e\xa9\x8d\xbbz\x15\xa1e\xa2\xa6\xc4m\x19IX\xfe\xd1\x8b36\x00;\xa8<{\xb5\xe6\xd7\xd8S\xea|\x8f\xd1\xa0\xb0+\x00\x9c\xb3\xde\xfc\xf9\x1d\xb8\x92"!\xfe\xdd24\x1b\xf7;+\x8cJ\xfc4\xa7\x8e\x9f\xd2[\xef\x132\xe1IsTO\xe4Q\xfa\xe4HqT?\x8f\x9c\xf9PaX\xaa%H\xdb/\x84\x18\xdbe\tU\xd4\\\xd1\x11/\xe0\xfb\xdc\xbb\xf3\xa7V\xcc_\xc8\xbe98\x1b\xc7\xa5\xed}-\xe1-\x86\x93\x87\xf3\xedY\x12\xadl$S\xea3C%+\x9d*\x9c\\[s\x12JB\xab\xcc\xac\xa4`\xf2\xfeL(\x90\x8e\xa9S\xbe\x0c\x1e\xbc\xc1\x1ag\xb3_\xf9|\x07\xb82\xa1J{1\r<\xe0Z{\xf4\xdeB\x91;\x94\xc1\xc6\r\x8b\xaa\x02KQ\x81\x81\x18h.\r\\j\xe7A;\xdb\xb3\xed\xf0L\x88\x07h.\xc4\xa0W\x8djy\xc8\xa2\x9d\x8a\xfd \xdfF|\xe3|Mn\x13l\x99\xf1C\x02\x888R_\x1b\xc2h+\n\x88\x07\xbbo\xd3R9q\xc3|\x90/\x93Nm\x98\xb2\x02C/(\x0eNwU\xbex]\x85\xeaI\xa4w|\xe4$\xde\x11\xf9\xda-\xa1\x91\x15\xab\xae\xeel\x81\x08-\x06\xb7+\xb6(\x9a\x14\xba\x96)K\xc3\xf5\x84\xc2\x1d0#.\xe6TlW\xe6z\x13\xd2ea\xe9e\xe6\xcc\x90\xfb\xf8\x1c\xd6\x08\x8a\x03\xcd0<\x9b\xdf^)\xf2\x86x\xf4\xdf}C-A\x8e\xfbC\x88\x18\t(U\xfe\xd8\xa1\xb1Wd\xc3\xb0\xb4\t\x194g\x06\x9d\xdd\xb56E\xa9\x11\xef\xabx:;\xf8rJ\xc1p\x94v\x08\x80Xr\x06/x3 \x8c\xe5a\x82*K\xea\'=\x82\x90:\xa3\x16\xd4\xf6\x08\x01\x9c\x93\xb6injVa\xcb\x1e\x89\x92\xad\xd4\x85@\x80\x04\xe0\xe1\xb4\xd1\x99\x15\xf7=0\xf3\xa5\xe0\xefF\xb7\xdc=\xe3\x16\'\x10\xe0\x19\xf5\xc1<\xe1\x8a\x82\xf3\x85\x8bkDD\xfb\xf9\xf3\x8c\xc6\'\xea&5\x1e\xc5\x02\x8a\xd7Csy\xcd\xee\xf7K\xea\xfb\xf4\xf1\xa5B9\x9a\xc6lC9\xbb=\xdfc\x8fO\x17N\xfc\x98\xc3L\xd3\x9b\xf7F<W\xfc\xc5\xcf\xcb\x04Z\xe2t\xa2\xc0\x03{\x90O\xbf\xb9\x16-;y\xd9jO\x0f\xf9j\x1c\x02\x17\x8c5\xb1F\xdfw\xdc\xc1P\x04\xfd\xea\xd6\x14\xe1V~2R?f^y\x04z\xe6\x1d=\x1d<\x18\xf3)\xe5<\x1a\xbe\x18\x0b\x05\x00Be*\x18\xaf/\xe8\x8d\x991\xa1\xa6`\xb4\xf9a`$\xee\x83\xdc\xd4RZ\xbd\xd7bZ\xd2f\x17\xeb?\xf2\x88j\xefF\x9apG]\x82\xc4\xab\xb0\x86\xc8\xa7e2.h\xf2,)-|\xbd\xc8wC;W#\x11\x80\xce\xfdH\xe5\xd1\x7f\xfa\xfe\xb8\xe1\xcc\xcf6\xca\xcb\xce\x90\xa3\xcf\xd3\x93\xad\xc0\xbd\xf3Z\r\xe6\x16\xbc\x9a\x92\xe8\xb0\xc1A :\xdf\xdeY\x17i\xa3>Rz\x11\xef9\xa0 \x82\xf9]\xfb)\xa8\xd3\x14\xde\xa9s\xa4\x91\xbb\x15-\x16Q\x89\xb5\xc0\r\xe7\xc7\xa2\xc4\xf7\xce\x05\xcdd\x1c\x0b&\x1e\xb7\xc5?<\x865\xd6\x13\xa3\r\x96+\x84\xfe\x04\x08\xfe\x85\x1f+Q\xac\xdb\x88c\x8e\xe1\xf4*\x8df\xc1\xadE\xe1\xb0$\xe9[\xb2\xfa\x8d\xb5\xb9,\xdb\r\x04 \xbb/T\xcc\x84`\xbeH\x97\x8fW\x9e\x82~\xe1\xbb13\xfcZ\xfca\xd5\xf1\x99\xe4L\xbe\x93\x97\xa4\xc4f\nF\x8f\xd7\xef\xdcr\xc0t\x8f\xff(WXJ\xf0uy\xa0\x88f\xb8\x9b4\xbd\x12m\xc7\xb4\xf1\xf6g\xe1\xdc\x00o(\x03=\xb5\xd5*\xed\xfdV\xd9\x84\xd7\x19r\x1f\x01X>\xea{^\x12-\xb4*\xca)S1\x1a\\\r\nq\xb3j\xa2bo\xa4g\x94\n\x14I\x9aJQ\xa6\x03\xc7\xf6p\x88\xd8\x14`\xdeiP\xd2\xa1N\x86\x7f*:\xcaEiN&\xdd\xbb\xf6\xfe\x9e\xfc\xf4\x90s\xec2\x90\x9c\x06\x8d\xb2\xa1\xbb\xff\x90t\x01\xed\xc4\xa3\xcd\x8e\xe5\x82^\xfa\xcb\x13\xf7\xa1\xe3!\r\x99\xd8\x9av\xf9\xb0V\xbew\xe5\xfd\t\x8e\x8f\x81\xfcA\xd7-\xadY\xf5-g\xb8\xcc=\xd8V\x9c\xf6\xa6r}\x81\xf6\xd9\x12\x83h\xc3\xc9\x0c6\xea\xeb\xc2\xcaB\xbf)\xb5\xf8\xd8&\xf0\xa9}4\xb4=\x96\xea\xbe\xb1\xd9D\xfb~\x13\xdc\xce\xdfA\x85\x8an\x04\x1cj\nJ0\x86\xd3V{\xc2\xcbyV\x15\x1e\xd9\x9c \x1c+\xdc4\\\xe6\x87\x17{/\xc4\x81\xe0n ugbI]\xdf8\xf7\xd6\x89L\x7f}\xbf\xa3\x83\xc2<\x92\xdb\xa8*(\x9c\x8c\xca\x031~\'\xe0Ma>\xf89\x03P9<\x8a\x91A\xb8\x80\xe7\x19\xd0\x0c\xba\x89\xd6\x80r+\xd3\xff8`O\x8d\x0bi\x0f\x8a\xa3\xe8@j\xa7\t\xf5\x1d\x863B0\xa1\xe9V_\xa0\x03\x07\xea\xc1\xba!\xba5{\xc7"~\xa6WN\x17/l @\x187\x843\xe5\xdd`\xdc\xdc#\xa5\x98\x9c\x18l+\x0f#7:d\x1a\xbcw\x944\xd3)\x1c\xdc\xd2\xda\x9969J\x98\xcd\x8e\xd2z-\x15\xb34\xe9Or\xae\xc8\xf7$*\xe7\t\xc5\x06\xd9I\x92n\x1e<\x99\xb0\x1c\xf1\xd4Q\xdc\xf7\x8a\xa1/"6#W;\r8\x88\x85\xd5D\xbd#\x03\x0f\xee\xd8p\xc8\x04\xabx\xf6\x04{\xc9\xa4d;\xdb\xa4Q\xc4\x19\xbdECw\xba\xd1U\x00Y\xd1\x11\xd4}\x91A\xc5I\xc6\xed\xce\xda\xdf]\xe7n\x8cK\xf1\xc29"\xbd{\xc1\x08\xa3\xea\xa8\x16R\xb9H\x8b\x90\xb0Z(\xf4\x14\xfdC\xf7\x97\xc7\xca\xdd\xefT\xaelY\xb34X\xa2&\xf0\xaf$\x9c\xadO7\xb0\x11B\xfcX\x1d\\Yd\xd0#\x80\x83T\x02\x12\xe27\xf3[ \xb5O\xf1\xbf\xaeX\xb4-\x88\xdat\xcd\xe3\x88\xba(\x86\x1e\x94R\xc77\x02<\x19\xf8i\x16\xfb2K\x0ej\xe1\xb1\xd6\xec\xb33\xe3\x9al\x8a\xa4V\x9b\x0e\x05\xd2\xca0+\x17\xb5\xdf*\xee\xf9\x01N\x938\x03\xdf\xbd\xda\x8d\x9fu\x19\xc2_\xc9}\x0e\xff\x1br-\xa0\xaa\xf8\x182s\\\x00\xa9\x96\xb9\xde\x14w\xf4{\x88>\xc3\x1dy#\x9d\xa4R\xb5\x91^En\x19\xfc\x1dV\xdb\xff\xed\x0373\xd1\xbc\xd7\x01\xaf\xea:\xadb\x00D85c@\x150\xda_\xa0\x1f<\xc1\xe8\xb9\xd2\x0e\x9a\x1f\xdfB\xa20\x8a\x95\xa5\xddX5z\xc6:]\x0b:Q\xbf\xce\xed\xfe\xee"\x1a\xd7Q\xe0\x9a\x01\\e\x00\xa6\x10~\x8dq\xc1o\xfa\xd3\x0b\t\xb3Z*\x9e\xde\x0c\xbd Q\x99\x98\xa3\xa3\xe8\xcf\xcag\xb6\xf9\xfe\x84p\xd5\x94\xa8\tm-\xc4\x15\xbc\xde\x16\xfd\x8e\xce\xac\x12\x95UH\xcf\x9c\x1d\xb3\xec/\xe0qR\xed#\xb8_\x81b$\x1a\x9cg\rN\xad\x91\x06\xee\xa5\x82q[\x1bx\xe8\x8c\xec\xd6\xfe~E\xb8\x1c\xf7\xab\xf0\xfaZ\xe4[\xa1\xb3\xc7\xa9\xf4\x8a\x11rG\x8eu3\x0cK\xd6\x16\xd7\xde\x82I\x00\xaa\x0ch\xa9/\xf71\x91\xc0S\xe8\xc7\xb1\x1cd\xfeH\x0bvV\xa1+\xfe\x8b\x87\xa5\xa60v\x0f\x9e\xb9_\x9bKt\xaa\x01\xd7\x9cS\xb7e]\xc8\x9a/x\x9e-Y\xaam\xf3\x8c\xa9j\xc1\xe1\xde\xdd\xcb\xde\xc3&L\x9a\xbco\xd0\xa4\xee\xfe\xb4\xd1\xe0\xf7m\x16,\xab7p\x1fv\xd1\xf9(\xf3P\x7f\xe2e\xdbP)U\xe9\xf6\xadx\x05\x03\x15u\xafH1\xce\x10\x11\xb8-HG\xb5\xaeZ\xc7\x07zF\x98\x15\xe0\x87~q"\xe2\x1c\xb7,^\xb9\xc8\x0f\x05\xb1\xd5\xa9\x1a88\x7f\xef\xe8+k\xf2U\x06\x8b\x02\xaaa\xbd\xd0\xfa\xe1D\n\xf6\xf8\x98.\x13D\tC\x8bv\xb8\x91\x07\xfc\xa8\x0b\x92d\xc4\x95[\xac5\xa9\xe2\xaf\x98\x81\xfa5\xde.\xcb\xcd\xa5\xe8#b:\xb0\x1d\x9e\x02\x9f{&\xc9\xa1\xc4\xa4\xac]\x7fl\xe3\xa0K\x12\xae\xb3\x0c\xa5\xe7\xc2d\x9b\xddE\x8d4\x99\x03\xc9\x10\xb6v\x06:\x9fE^\xf6\xf8;\n\xb5\x9eh\xb8\xb3\xb3XL\x06\x1a\xbe\xc27\xbcm@\xaf\xf6?\x0c\xdf:\xca\xe2\x9d?\xe2\xeeEp\xff\x07\x1a\xf9\xb0]N\xcc}\xcdA\xb9\x8b\x1cXR,\x83\x93\xf0\xaa\xf0s\x17-\x1b.\x08V\xf9\x15N G\xdb\xaaf\xa4\x17\xa2B\xf1\xe5\tb\xdb\xb2\xa7e,\xdb;O\xa8g\x90H\x96t\xad\x14\x9c\x04W}G\xb8^\xcer`_\xbd\x8c\xd0o\xbad6\x1a\x7f\x8e\xe6\xec\x96\x1aoAN\xad\x81\x04<\xb4\x95\x9c\xc0\r9\x13\x80\xf7#H=\xf5ls\x88\xe0\x8e\xa6\x0e\xff\xb0\x03\xacb\x08\xcc\xae\xb04(m_\xf75. \xacL\x8fN\x0c(\xe4\xd2}$\xbe\\\xaf\xf6\x0f\xaa!\xd0y\x1dl\xb1\xdb5\x15oi\x1c0Y\x84$\xab\xb9\xcd\xd2z\x1e\x85\x1b)\xa3c(%tvxoRM\x1ejH\xf7\x8fYY\xf0\xad\x1d\x86\x15\x12\n\xfb\xfe\x91\xbd\xdb\x06\x9b\xc3>\xfe\xa2hQL\xd8k8\x9b~\x07\xcf\xff\x9d\xca\xae\x1f%\x9a\xba-\xd8v3B\x83\\\x9e\xb8Y\xf40Us\t\xa5I\xb5t\xcc\xa5\x95=:\xe1\xbb\x8b\x93q5UZ\'\x1eE\x80\xc6\xf0V\xd3\x92\xef\xf9gR\xa5\x99\xa9\xca\xc8\xf7\x8d\xfd\xa4>\xc4\xa1\x13\x98w\x156\x1b)+X\xabRW\x9f\xee\xa7\xd47W\xcd"\x82\xa6V.5i{\x9eVn\xd5\x0b\xa4|\xd2\xa1\xc2\xf2\xb5\x8b\x98ODW\xb1Yt\xf4Y\x05g\x1f\xe2\x17} \xd3Ll\ns\xda\xa4\xa0h\x0c\xda\xed\x06\x883\xba\xf10\x1eQ\xcc\x85\xb3\xf5\xdf\x16q\xf2\xd3\xbd\xeaLRq\xf2^?n\x1b\xd5\xfb\xc8\xe5\x063\x9f\xd6\xc5e"\xc6\x95\xb2\x1d\x9f\xd7n\xf5\x97\x06\x0f\xae|\xd5\xff\xcd>+\xc1\xc7\xb1\xa3\xc4\xd6\xc0\xe1\xf9\xac\xd3\xb2\xc3\x0f3\x1e\xb2\xed\xfb\x7f\x81\xb2\xa8\xb7\xde\x1b\x14\xf0b\x0cB\xb6\xf303}\xe6\xab\xb2 \x0f\xcb\x96m\x90"r\xd9r\xc0\xc7\xfeh\xf6\x07\x01\xd4\x92X\x02\x91\xff\x1e\x9b\xc9\x86\xc7\xb08\xa2yWm>\x82\xdc\xea\x0b\xd5\x14F\xfa\x80\xb5\x91\x19\xcaB\xb0\xb7\x91|\x9c\xb4\\*\x94\xd5\xc6\xfaD\xa3\x81\x8eDy\xd5\xc6\x0b\xaa\x1a\xbf\x7f\x99W\xe1\xd3\xef\xc6\x07@\xe1\x16\x9d5\xa5\x0bK-\\\x15\xeecjGwH\xfc=\tFJ\xb6\xafI\xb0\x9f\x03E\xeb\x0e?Hh\xc4R\xd6\x1fw\xc4\xde,-q\xcb|\xc1\xc1\x06\xaa\xa2\x9e\x05;L\x06\t\xe4\xb07*\x10\xf5\x7fH\nn\x9d\xe3\xac\xad\x05\x90Z\x94q\xa9\x84%\xfb\xef\xef\x12G\xfaP\xd3\x88\xb0\xdb\x8d\x8c\x03\n_\xbc.\xc4\xaduB\r\xf0A\xb2\xc9\x9eW\x9a\xf2$\x82\x84\xa1&zR\x88\x9a6\xba8\x1e\x0f\x1f\xe5\x8bo|\x85tp\xb6"\x9e\xec\xec\xd0R\xb0!2\x8c\x9d\xfb\x9c\x9e\x12^\xa4\x89\x0e\r/\xd8\xf5\xcbbh\x8b\xe9$\xd4\xcf!GG\xc9\xec\xc1\x02\xae\xfc@\xfb\x8fZ\xea\x99j\x11\x0b\xa9\xab&\x16uu\xa0\xa0\xbc\x9f\xd6\xae\x07\x11\xefz\xe0}MZ)H\xa7\xfddX\xe8|\x06#\xc4\n-K1\xd8\xd5\x1aj\xfb\x97\xa2\xff2Zf\xcd\xde\xcd\x05IQm\xec\xce\xcf:H9\xe1?\xeb6%\xa3\x1c\xa8L\x0bZD\xf5C\x8b\x900\xf2\xae\x87t\x97($\x11b\xf3VY=h\xb0\xba%\x9bp\x83\xc00\xe5~\x1d\xa9\xde\xe5\xda\xfa)\x98\xde\xd6\x0e\xf61\x15\xfcd\t\xaf$\xce\x92\xd5\xd9\xe0\xb8\xc1$\xee\xe3\xd0\xb7\x0cH(\xdb\x11\x17y[\xaa\xd7\xa5\xcf1\x08\xd6\xf1\xfd\x11kY\x9e\xef`\xdd\n_\xed\xba\xe8\x19\x87?\xba\xc50\x11\xe36\xde\xedHf\xec^\xbe\xd5\xf0\x9c\xb1\xff\xfd\xc9q\x9fU\x8aY\xfeYr\x16\x80\xb8\x08\xc3W\x0b\xda\x13G\xee\xe7\xd5\x15|\xe9\x02Zt\nUy\xa3\x96\x8d\x1fb\x1d\x96\x1dJ\xf9=\xbd;[\xe8F\xbd\x1ft-\xfc\x18\xd00\x01\x7f\xf9\xed\xe5\x99;D\x0fG\xf5\xa0\r\x90\x03BV\xc4\xa9\x9c\xcf\xa7\xb5{@F\x1b\x84w\xd1\x90\xb866\x84/\x9bH\xaeF)\xd6^\xe9\xd5\x11W\x1f\x9d\xe6\x9c<\x06\x8e\xdbp;MG\xc2|\x91\x0c\xd2\x1f\x7f\xa0SRgi\x0b\xd3\x85\x13\xe8_A\x14\x84\xbd\xbdP\x92QI\xe1\x98`\xf3\xfc\x9d\x91\xb7\xe0J\xf0\xcc\x0cu\x7f\x03_\x94\xd3CQ\xaf\xf2\xf2e\x81\xa7_\x88[\x88\xde\xd0\x17\xbb\x19\x0e\x91\x82\x84\x00AK"\xab\x05\xe9P9\x12\xb13\x98\x8f\xee5;\xd4\x9e\xa2la\x8d\x15"\xd2\xf7.9\xb5\xe27\x92\xd8\x049v\xb4\x85l;<\xed5\x0f\xdf\xcf\x98(\x13r\xf5\xeb\xfd-O\xf5~K\x85f\x8b\x94\x88F!m\x90\xf4\xfc\x8a\xb3\xee2\xdb\xbd\xc0\xdd\xce\x95\x0f\xc0\xf9\x1e\xb8u\x0c\x14[\xe2G)w{7\xfbV\x0b<\xe8],\xcb-\xe1\xba\n\x1c@\x8d\x10\x9e.[,\xab\x8c\x0eM\xdarc\xb1L\xd0\x8c\x14\xf2u\xa4y\xcc\xd4\xed\xb4\xee\xa3|(\x10\xc9\x96\xfc\xa4At\xab\xe3\x8c<d\x04[\x92\xf8\x18\xfc\x14\x96B\xcd\xe4\xa9\\\xa8(\xa5\xa4\x8ef9o\xe5\x93\xc5\xc4\xf0\xaf0\x9aG\xcf\xa2\x7f(\xf8\xcfL`?m2\xfd\x86}H\xaf}\xb4\'\xad\x9fQg]I\x88\x8f\xe7\xd5\x9d!>+P{\xe83\x024\xdd\xd8\xf9.6(Z\xdae\xf0\x89B^~BJ\x9d\x97)\x0fB:\xa3\x9f\xbb\x82\xf7\xa3J\xd4\xbc\xdb\x02\xa3\xca\xc7\x87P\x97\x7f\x10/\xa0\xe7\xdf1\xf1\xd6\x97\xe8\x8cc\xec\xcc\x93f\xc7d\x02u\x11:\x15\xa2R\xdc=L\x0e\x8f\x88PC\xc8\xca}@*D\xaa\xfe\x08\xc7\x96b\xe1\xa0\x1b\xad\xf6C?d\xfa\xf3\xb6\xda\xcff#\xa00\xf3\x7f=\t+\x05\x12D\x8d\xb9}\xf9A\x81k\x99s\x9f>\xb1\xc9\x8ee\xe2\x1c\x15\xf3\x92\xe3>\x0c\xf3\xed\x0c\xa3\x93\x08b\xa3\xb5i\x96\xf5\xa0\x93\x0f\x81z\xb0\xfb"\xac\'\xba\xb2\xb3X?4/3\xaf\xd2X\x11\xe6\xa4&.\xa5#H"\xbf\xac\xf2\xd3\x8e\xf5\x80$4N\xf4\xfe\x17\xc2p\xf6\xe5\xbf\xaa\x8bta\xd0nX\xe0\xc5\x94\n\xfa\x87\xdcO\x8e\xd9AO\x133x\xa8\xd1\xbf\x98\x90X\xe5\x89\xad\\\\?\x99\xe4-\xbb\x01{\x8e\x9a\xae\x0eL\xb2\xe0\xd6\x84\xd6\xe5\x89\x91\xf0\x0f\x8fs\n~\x979P*\xd5\xe0\x94;\xab\x07\x9eJ<\x03\x7f`\xf3\xc26\xd1\x91k\xe1\x82s\xad\t\xbc\xe8\x99AM"\x15\x82\n\x17\x96\xaa\x84r.\xd3^\xa5yx\xd6\xd3=\t9\xb9\xcf\xf1\xe1\xddcBvR\xb7\x0bdYe\xce\x95\x88y\xf9\xb9SDlU\x08\xf0\x13\xdcq\x8c\x87\x88O \xa6\x1e\xc0\t\xa8\x85C\xd1\xd4\xbd@\xc6,w\x8f\x7f\n]ne\xd6g?X\x9c;\xdc\xa6\x84M\xa7\xf0/]\xfb\x7f\xb8E\x06{\xb7\\\xc8\x9a\xaf\x8f\xaa\xb9\xb2\xeb#\x18`R\xc6\x81\xd9}\xc1786\nNiQa\xd7\xea\xd9&\x05\x87\x896\x10\xda#\x8aX\xfa\xc5\x82B94po\xbe\xf2\xf3Q\xee\xf2\xc9\x98\x06/\x15\xdc\x17\xf2*\xaaC\xb1\xc5D@bK\xc8\r\x08$\xcf\x13\xc4\xbcg\xbaI\xe6\xd2\x88\x07\xc7\xca\xf4\x9b0\xd3)\x06\xeb\x88\x89\xfeZ\xcdK\xcc;4\xc6K\xa1X9\x91\xb9\x00@\xc7 \xd6\xe0\x7f\xab\xa8\x82IS\xac,D\xdf\x0e\x7f\xc6-N\xd4% \x0f\xbe0\x0fh\x88\x95\xa3\xbeJ\xadiS\xb8"\x97W\xd1no\xe2\x8a\x9a\xcew\xb5U\x85\xfcL\x91;\xc9\xfc\xe8\xaa!K\xa2\x96\x07Ah\xcf\xf0\x08\xee\xde\xe4\xd6^!\xf2\xb1\x0c\xc9F\xdeG3 \x05f\xc1\xf7\x87\xd6\xd0$\xd0\xf3L5^i\x00\xc8\xf7\n\x8f%ug"\xf6I\xb11\xaau\x17\xcd\xf2\x05\xe5\xf2\x02\x1f\xed0@\x15\x80d\xc4&\xdc^\xa8\xda\xc7\xfd\xb7\xfb\x08\xf1F\x14\xa8\x8e\xffv`0g\xe7\x15\xd0_\xc2\x1b.\x99a\x17\xde9i\x98\xae\x1f\xf7\xb91\x99\xe8\xae\x1e\xb0/B\xa5\xf1<{8+[\x91\x1fX\xaf:\xce\x0f\x0b\xe7\x1a\xb3W\xd7N\xf7_\xa2n\xd4@C\x04M\x94\x95a\x909\x0b\x9a$j\xd0M\x8f\xa6\xa3\x9e\x1f\xa0\x9dm\xe7\xf8\xb0G\xa9\xe5 Y^\xb1\x84V\xa1d\x8aL\xfa\xb1e\x1b\xfa^I\xd3MIC\xbf\x86tb\xd4a\xca\xcd\xea\x02N=:\xcf\xde^]q]y^T\xfd^\\jA\xe7\x99mR\x1e\xab@\x9d\xfe\xcb4\xaf`x\xd8.e\xea\x0bx\xce\xcb\x824\x1a\xf1\xa4\x0f\xcb\x07\xabm\x98\xaf&\xef\xf5^\x08b\x04%X\xc7\xb7j\xa7\xbaG\x9b^\xaf\xf6lvv\x80\xa3+\xe6\x1b1\xbf8\xda-\xedQ\xdb\x13\x1c\xc0\xd2k[A\x13\x13\xdaV\xacB\xb4\xd1I{\xb0@|}{{\xcf:\x8b/n\xe2\xc3\x05\xefv\xc8\xf6\x00\xa2*j\xc3\x13\xb1\x99\xeb\x05\x86\xf0\x1d\x12\x87\x1f}\xb8\xc2(\xbf\xcb5u\xc7\xbfL\xea\xc7\xe3\x08\x85\x8b\xdb\x91\xde\x082\xe7\x12\xdepU\xb6\x11\x02\xb3\x8cRT\tO\x0b4\x03\x91\x95\xa7\x8b\xb1\x82g\x13@L\xf3\x93\x1av/jPR}\x12&q\x96\x01\x0f\x07\x8d\xc4B\xb69m/{\xd8Pp\x18\x02\xec\x94\xca\xd6\xe3o\x94j \x8b\xe2\xa970\x05\x94\x84\x1e\x1f-j\xbd\x10\x08y`\x90?B\'0\x87\xc1G\xf0\xc3M\x1f#\xd0\x86\x03n\x1f\x92r\x12[\xf1\xbd\xc6v\xa9\xaa\xad\n\xc5\xb3\xd6\x93<w?\xed\xa8\xb6\x8e:MJ:o\xd14\x8c\x89\xb7 \x05\xec\xd90\xeb,W\xbdo\xceE\xe2\xc7\x94\xfa\x92S\xd7\xa9\xd558*\x82\x1a\xbd\x96\xbf\x1a\x86\xe8\x06VZ\x86l5B\x03G8\x11\x12\xe65\xc4\n\x9a\x883b\xaf\x8f\x1aR\x17p4\xce/\xe3\xa6T\x84#\xcd\x08\x8co\xfe@1+\xd4\x0e\xdb\x1e\x02\xd50ngX8GT\xca\\\xf2\xe6\xbc*\x98Z4\xab\xed\x04{\x17\xddt\xc4\x8b\xb7\xc0[\xd8\xc1!*%(n[X\x15\x0c$\x9b\x1cuS{j\xbaX\xc2h\x94\xd2\xcc,\x0b_b\x02\xef\x85\x80\xfd\xf8\x9e\xa1r\x05y\x9f\xf8$V\x8f[\xa6\xd9\xe0\x8c\x8e\xdc,@\xfb\xbe\xd4y\xdcpPD\xd6|\xf9\xa7\x00BH\xf5\xfc\x89O"\x85 \x06Unp/o\x92\x8fi\x165&\x98\xe2P\xad:\tC\x88\xe7\xb57\x89\xe3\xa7\xd0\x17_\xa8\x81\\\xc4 \xab\xb3-\x07P\xc8G\xe2DS\xe1\xf1\x00\x1a\xa9\xb3\x0c`\xdb\xae\x9d/\xae\x89Ip\xe1\xa8\x14q\xe8\x87u\xc7\xb4C\x10\xce"\xe8P\x17xmB\xa0usX\x94\xb5\x90\x07\xb7\xf24\x03\xc9\xc7\xb1\xf2MY)UK\x98k\xef@\xd9\x93\xbbhp\xce\x1dv\x19\x86|\xb1\xb1\xb6\xd0#\xf0U\xd2\xac\n\xc5t\xe5+W\xa5\x12\xe8\xd7\xe0\x9a\xeav\xf5G\xbf:J\xa3/^\xb8O\xc2\x1a#\xbbB\xc11cW.\xce\xe6\xa8\xae\x15\xa0\xc0\x1d\xce\x8ePoUu\xd2\x9c$H\xc43\x93Q^\xa2\xb3r\xedK\xdcjRY\xc5(\x0f\xb2_\xa9\r\xa2\xbc\x062\xf2\xb1\x04P#a4\x8e\xcc\xabJ"\xd32\xbe\xcc\xc2;\x0e7\xf8\x92d*L\xael\xb5\xda\x8d4\x14UT\x10\xe1;Z\xb8\xb4V\x934\\\x9c\x8fA\xaa\xac\xa8\x86\x03X\xadj\xad[ooW\x0c\x11;.\xa7\xc9\x8c\xfbr\x90\xf1\x06\xc4\xffY\x8cD\xb5\xe7[\xf6\x14G\xe9K\xd4[\xa4\xd4b\xa4\x96\xa1kP\r\xad\x9a\xee\xdb\xb0T\xdaT\xd16t\xd8\xc9\x98\xdd\xc5\x83\xe5\x1b\xea\xe8\xa2ne4\xc3\xb0\xb7\xa0#@\x15\\+\xe9\x7fn\x13X\xf8.\xcb\xc9\x01Ga\x83\xf1\x9a&\xdb\xda\x8auH\x94\xf2\xde\xd7-\xdd\xb2\x9d,\xbd\xc6$e\xfb\xbb\xd0\xd6\t\x1b\n\r*\x94%\xe0\x98\xfb\\\xc8\xd5.Pf\xb6\xb2\xa6\x07-\xc2x\xe8AS\x93\xa2L\xf4\xa7Z\xd2\x00\\P\xde%\x14S\xfb\xae\x80_\xd4\x95\x1d\x04\x1a[\xcep\x85\x1e)\x84(\x91m\xc4\xcd\x00I,\x86\x1e\x1e\xcelR\xde9\xad\xe7L\x9d\xc8v\x94v\xb6C\xc6Q\xa9\x1b\xbd\x99\x92\xb3\x8aq\xb7\x1a\x95y[\xaa\x1d\xf8B*h\xeeO\x91\xd4\xf0\xc6\xa3\xec\xfb=\xc0\x0c\x9a\xe0i\xb9hK\xbd\xad\xcb\x10oGd\x08>T\xb2\x85\xdf\xc4\xe1\xfa\x04:\x1e\x87\x0bV\xdf\xe5T\xe5\xd9A\x0f \xf4(=\xc8\x8e\xc2\x8d8\x1a\xe2f}\x97\xe5\xdd\x15\xba\x8c\x81\xf9\x1c\x0e\x8dc\xa0\x90\xfe\xb2`\x88\x9e\xca+C\x04\xec}Q\xa4\xfcC\x1e\x7f\xdc*\x9bW,F\x83\xd1\x98gl\x12\xa4\x87\x84uX=g\xcfY\x1b@)$\xf1\xf4\x90\xc4\x18\xe4A\xe6U?\xc3;\x8c\x9f\x89\x8c/\xfd\xfdw\x84ySi\xbd\xab\xad\xc4\xd2\xdd\xabKx\xe355\x7f\xdd0\xc2T\x0f\xc8?\xb1\xfe\x82nsT@\x18\xa7\x93\x0f\xd6\x07\xed\xb6\xbc\xfd\t^\xddv\xd9\xad\xf5&\xf1i\x1aP]LB\xd8`g\xb5u"\xe5hEH\x11\x84\xbe,\xce\xfc\xba\xe7\x03D@\xdbV\xc4\x88\x82\xf6\xdd}\x88nL\xd0\x1a\xfd\xd54\xf9T\x8e\xab\x9f\xef\xeb\xd07\xa3\xf7\xbd\xc6\xf0A`\xc7(.\x05\xfc\xd11,\x90U\x9fJ\xd3\xba\xed~\x0e8\xb8\x81\x18Rs\xe1\xb2[W\xe1\xc4e\n\xbe\x96f\x1b\xa2\x00k\x82\xd9G\xbd"mQjG\xf9\tYx\xaaM\xbc\x11\x850x\xd2N2\x98\x803\xdb\xa5G\xb7\xac\xbfg\x93>\x08\xfd\x1c<\xd1\xd5\xf5\x06\xf0\x0f\x11[0G\xa8b\xb9qo\x0b\xed\x9c\t\xb4\x8c\xc6\x05\x1a\x9b8\xb3)\n\xc9`\x05\x0e;&q\xa5\x8e \xf0cKE\xb6P\xff?\xf1\xda\x90\xe2\xa0\x06\xf3\xc0v\xbf\xe7\x826\xfc\xacz-[\xc9\x10\xe0\xa5\x14\xd2d\xa5\xd7H\xd5\x82\xda\xae\t&2i\x1a;\x14q\xa8\x13_\x97\xf3\xc3\xb2q\xc0\x9e\xfe\xdf\x15Y\xec(3\xdbt\xcd\xc2\x11S`\xe6\xc3e\xee\x8d\xa2v\x0b\xb4D\xd3 (2WX\x82\x80\xd5:}\x1aXdc\x16\xbd\xc8\xa7\nq\x95:\xc0\x90C\x88lc5F:\xcdm\n\x9e\xc8P6g\x14\x9bo\xead\xd0l\'%\xe3\x18\xea\xf7;T\x01e\x80\xbfR\xa8\xa73Bar\xce\xe9\xc0\nA\xc3@\xc7\xd3\x9dO\x99\xaf\xfd"eI$\xael\x95\xa8\x93g\x7fv\x02e\xda\xc7\x91$\xab\x8c\xd7\x1a<\xc5sgX\n\xf4\xac\x87\x14\xf7\xea\xe7\x93E\xbc\x9a \xc0-pEu\xc9\nU\x06F\xf99\x0c\xe1>\xf62;6\x1b\xa6v\x1b!\xac\x19\xe55\xe1\xd7\xb34\x11\xaeT\r\x03s\xf1\xcdC\x1a\xad\x8e+\xeb{<j\x94z\x9b\xf9_Mu\x89\xf3\xa8\xfcu\xde\xe5=\xde\x9a\xb0\x8b\xe9\xa8\xfc0f\xb0%\x92 \xbbH\xa1\xe3\xc5\xdc$^\xf7\x94>\xbb\x03\xc0\xdb\x01\xea\x81\xd7q\x9f\x98`;\xf5\xb9\xfb\x1e\x92\x0c/a\x91Z\x05\x80V\xf8+\xb9\x96\x97J\xb5\x9a\xad\xffD\xd2\r\x00b\'s\n\x83J=\x89\x1b\xb1\x01<\xb9P\xd1\x8d"Y\x0bD\x82\x1b\x9b\xa7\xfdk\x97\xf35T\x1c^\xc9UE\xa0\xe6\xac\xfd\xe5A\xcc\x8e\xd4\xa65c\x1a\xdaB\x1cN\xdb\xb3\xbfV\xa5%\xe5}\x8b\x90\xdeK}\xbe[\xe7\xdf\xa3x|\x9aK\x0e\x07e\xa3\xdd\xf0|\x80z0\xbd\x92\xcd\x86\xe6\x99"s\x0f\x0f<3*\x99\xd2o*\xa3\xe7i\x83\xde\x9c\xe6\xb7\xea/\x07`\n.\xc6c\x11\xd7\x92\xd8\xc6\xa9"\xcf\x02\xed\xb6\x18\x90\xd2\xe4(\x98pT\xda\xc9\xc0eN\x16\x1f\x8a\xb5\x84\xbfusW\xd5\x94<)^\x05\xb6\xf0=\xdf\xb4\xc7\xf1\xce\xd1\x1f\x91x\xbb"f\x1f\xb1\xc85\xe4\x11\xae\xdc\xad\x11+T\xc0\xd5\xab\xdd\xb9y\x84\x9d\x90\xe8=\xf5)\xdd\xa3\x8d\x07\x19\x04\xd9\x1d_Z\x959\x17\x16#\x96\xdd\xa0\x14\x96I\x8c\xca6|\x1f:4\x04\xc5\xdc\xb6\xe5\x0b\x98\xd9\xc3\xeaq\x92\x8e\xc0}\x0c1\x02c\x9b\x80+k\xa4\xeb\x0e\x1a\xb1\xe7G\xe1=\xa9\xf0\xb4\x96\xaf0m\xf3\x1a\xcb1\x89\xef\xde;M\x9a<\xefM\xa2\x9e\x8c\tI\x0b\x1f\x83\xa1\x81$\x0e\xf1\xfa3W\x93\xf2\xf0\xbb$L\xb5O\xf5\xbc\x17D>\xf7\xf3\xfb1Jh\x04\x84\xab\x8d\xc7P\xec\x9d\xe0\x1b\x80G\x14\xf0\xb3\xc1\x7fr\x91\xb0f\xd7\x14\x9b\n\x11\x0fki%\x17}s|h\xfc\xca\x8c5\xdb\xbe4\xc3\xc2>W3;\xd5\x13"\xac<K\xfd\xc1\xe8\xf7\x14hHh\xbcO\xc8\xb61^\x87\x94H\x92\xc1\xe3\xcaZ\xed[>[3\xcb\x9e\x00\xccO\xa9\xc3\x80p\xa8\x999b\x8e\xfe\x90\x1f\xa7|\xc17\x8b:\x9cU\xbb\xd8\xdd\xa7;Bv\xd2\xe5\x04o\xf6/&\x04\xca\x07\x82\x11\xa2\xef\x9b\x99\x9e\x0fT\x06-mnG(\xca\xca\xe2\xc4j\xb6\xf7\xce\x86L\x1d\xa37\x86AO\xb10$*\x97\\\xc7.\x7f\xbcZ~\xf5',
    b"This is a string shorter than 55 bytes",
    b"This is a string longer than 55 bytes, so to make it longer I need to write some more text so the string is actually longer than 55 bytes",
]


@pytest_asyncio.fixture
async def rlp(starknet):
    return await starknet.deploy(
        source="./tests/unit/src/utils/test_rlp.cairo",
        cairo_path=["src"],
        disable_hint_validation=False,
    )


@pytest.fixture
def long_list():
    return list(
        bytes.fromhex(
            "80850430e2340082520894dc544d1aa88ff8bbd2f2aec754b1f1e99e1812fd01801ba0110d8fee1de53df0870e6eb599ed3bf68fb3f1e62c82dfe5976c467c97253b15a03450b73d2aef2009f026bcbf097a257ae7a37eb5d3b73dc0760aefad2b98e327"
        )
    )


@pytest.fixture
def short_list():
    return list(
        bytes.fromhex(
            "80850430e2340082520801801ba0110d8fee1de53df0870e6eb599ed3bf68fb3f1e62c82dfe5976c467c97253b15"
        )
    )


# using https://etherscan.io/getRawTx?tx= to get samples
RAW_TX_SAMPLES = [
    bytes.fromhex(
        "f86e8263eb8505b4f9a92b82753094e688b84b23f322a994a53dbf8e15fa82cdb71127880c0e2d2235b8de888026a02c924804fba1a12e820afb1da9a2a9dd3d23894b908d11431eef22dd36e67ea0a072590d04f3e8846aabdddb6efe67a3881a27ab17d9d45fff60ef46a3bddd27f9"
    ),
    bytes.fromhex(
        "f871018302c89e808506a713e0da82520894e35bbafa0266089f95d745d348b468622805d82b876e00f6f06088e880c080a0081ba82131d62d76d2b836878d2b7949f2ce5de8387f685907226f505df95364a014d781beb05623e5e8836622bfb205127ddc9c398dd04c44a8ce1184cea9527b"
    ),
    bytes.fromhex(
        "f90135010a840adc656b8508d6c03c4a8303088e941111111254fb6c44bac0bed2854e76f90643097d80b8c82e95b6c800000000000000000000000095ad61b0a150d79219dcf64e1e6cc01f0b64c4ce000000000000000000000000000000000000000000006c36df1cfb2498bfc4fa000000000000000000000000000000000000000000000000000000000051a4a60000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000100000000000000003b6d0340773dd321873fe70553acc295b1b49a104d968cc80bd34b36c001a03ef4c950835e3402d10615a9ca96b9143921e378e80d8ceebd5b07710cb03657a028e3f573e7484eff9867045923e61e75d29f65b9af2fb82b7a57a163742eda70"
    ),
    bytes.fromhex(
        "f86f830216c58506676ef5ec826b6c941cedc0f3af8f9841b0a1f5c1a4ddc6e1a1629074880101009bbb1fb5aa8026a0044e77af97e063a12b87fbcc083eae2b4b8daeaac46f967b5dcc82cfa1725192a06a9626195a8430f83676b3c1ca8037bbf5d2108161b0aaf07968a2cd442dc8ef"
    ),
]


@pytest.mark.asyncio
class TestRLP:
    class TestRLPListEncode:
        async def test_should_encode_list_longer_55_bytes(self, rlp, long_list):
            rlp_list = await rlp.test__encode_list(long_list).call()
            data_len = len(long_list)
            data_len_len = (data_len.bit_length() + 7) // 8
            prefix = 0xF7 + data_len_len
            expected_list = [
                prefix,
                *list(data_len.to_bytes(data_len_len, "big")),
                *long_list,
            ]
            assert expected_list == rlp_list.result.data

        async def test_should_encode_list_smaller_55_bytes(self, rlp, short_list):
            rlp_list = await rlp.test__encode_list(short_list).call()
            data_len = len(short_list)
            prefix = 0xC0 + data_len
            expected_list = [prefix, *short_list]
            assert expected_list == rlp_list.result.data

    class TestRLPDecode:
        @pytest.mark.parametrize(
            "data",
            SAMPLE_DATA,
        )
        async def test_should_match_decode_reference_implementation(self, rlp, data):
            decoded = await rlp.test__rlp_decode_at_index(list(encode(data)), 0).call()
            assert decoded.result.data == list(data)

        @pytest.mark.parametrize("raw_tx", RAW_TX_SAMPLES)
        async def test_should_decode_txns(self, rlp, raw_tx):
            contract_decoded = await rlp.test__rlp_decode_at_index(
                list(raw_tx), 0
            ).call()
            assert contract_decoded.result.is_list == True
            decoded = decode(raw_tx)
            for i in range(0, len(decoded)):
                sub_decoded = await rlp.test__rlp_decode_at_index(
                    contract_decoded.result.data, i
                ).call()
                assert list(decoded[i]) == sub_decoded.result.data
