name: CI

on:
  push:
    branches:
      - main
  pull_request: {}

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions: read-all

jobs:
  tests-end-to-end:
    runs-on: ubuntu-latest
    env:
      STARKNET_NETWORK: katana
      PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION: python
    steps:
      - uses: actions/checkout@v4
      - name: Extract Katana Version
        id: extract_katana_version
        run: |
          KATANA_VERSION=$(grep -oP '^KATANA_VERSION = \K.*' Makefile)
          echo "katana_version=$KATANA_VERSION" >> "$GITHUB_OUTPUT"
      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: 3.10.14
      - name: Load cached Poetry installation
        id: cached-poetry
        uses: actions/cache@v4
        with:
          path: ~/.local
          key: poetry-${{ runner.os }}
      - name: Install Poetry
        if: steps.cached-poetry.outputs.cache-hit != 'true'
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          virtualenvs-path: .venv
          installer-parallel: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: make setup
      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly
      - uses: asdf-vm/actions/install@v3
      - name: Load cached katana
        id: cached-katana
        uses: actions/cache@v4
        with:
          path: ~/.cargo/bin
          key: katana-${{ steps.extract_katana_version.outputs.katana_version }}
      - name: Install Katana
        if: steps.cached-katana.outputs.cache-hit != 'true'
        run: make install-katana
      - name: Run tests
        run: |
          make fetch-ssj-artifacts
          cp .env.example .env
          make run-nodes & make test-end-to-end
